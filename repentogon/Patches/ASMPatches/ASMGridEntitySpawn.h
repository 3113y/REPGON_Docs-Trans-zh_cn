#pragma once
#include "IsaacRepentance.h"
#include "ASMPatcher.hpp"
#include "../ASMPatches.h"

struct GridEntitySpawnPatchInfo {
	char* signature;
	char* comment; // for log
	int sigOffset; // offset from address found by scanner
	GridEntityType type;
	unsigned int variant;
	ASMPatch::Registers idxReg; // register containing grid idx
	int idxOffset; // offset from idxReg to grid idx
	ASMPatch::Registers seedReg; // register containing seed
	int seedOffset; // offset from seedReg to seed
	int jumpOffset; // offset from start of patch to jumped address
};

// reference for future maintainers:
// these patches all start at the point where g_Game is loaded into ecx, slightly before the grid idx is checked if between 0-447,
// and then end immediately after GridEntity::Init (or in some cases, to where the ai function jumps to immediately after this call)
const GridEntitySpawnPatchInfo patches[5] = {
	{"8b0d????????8985????????8b81????????8985????????85f678??81fec00100007c??68????????6a03e8????????8b85????????83c40881febf0100000f87????????81bc??????????840300000f8f????????689c010000e8????????8bf083c40489b5????????8bcec745??06000000e8????????c706????????c786????????00000000c786????????00000000c786????????0f000000c686????????00c786????????00000000c786????????00000000c786????????00000000c786????????00000000a1????????8b0d????????8986????????898e????????a1????????8b0d????????8986????????898e????????8b8d????????c745??ffffffff8b85????????c786????????00000000c786????????00000000c746??0e0000008946??8b54????85d274??8b028bca6a01ff108b85????????8b8d????????ffb5????????8974????8bcec746??01000000",
	"ai_mega_fatty (red champion)", 0, GRID_POOP, 1, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0x166},
	{"8b0d????????8985????????8b81????????8985????????85f678??81fec00100007c??68????????6a03e8????????83c408",
	"ai_larryjr", 0, GRID_POOP, 0, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0x186},
	{"8b0d????????8945??8b81????????8985",
	"ai_chub (carrion queen)", 0, GRID_POOP, 1, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0x172},
	{"8b0d????????8985????????8b81????????8985????????85f678??81fec00100007c??68????????6a03e8????????8b85????????83c40881febf0100000f87????????81bc??????????840300000f8f????????689c010000e8????????8bf083c40489b5????????8bcec745??06000000e8????????c706????????c786????????00000000c786????????00000000c786????????0f000000c686????????00c786????????00000000c786????????00000000c786????????00000000c786????????00000000a1????????8b0d????????8986????????898e????????a1????????8b0d????????8986????????898e????????8b8d????????c745??ffffffff8b85????????c786????????00000000c786????????00000000c746??0e0000008946??8b54????85d274??8b028bca6a01ff108b85????????8b8d????????ffb5????????8974????8bcec746??00000000",
	"ai_dingle (normal)", 0, GRID_POOP, 0, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0x190},
	{"8b0d????????8985????????8b81????????8985????????85f678??81fec00100007c??68????????6a03e8????????8b85????????83c40881febf0100000f87????????81bc??????????840300000f8f????????689c010000e8????????8bf083c40489b5????????8bcec745??1c000000",
	"ai_dingle (red champion)", 0, GRID_POOP, 1, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0x107},
};

void PatchGridSpawnCallback();