
"558bec83e4f883ec30a1????????33c4894424??8b45": 
__thiscall void Entity_NPC::Morph(int EntityType,int Variant,int SubType,int Championid);

"558bec6aff68????????64a1????????5081ece8000000":
__thiscall void Entity_NPC::Render(Vector *offset);

"538bdc83ec0883e4f883c404558b6b04896c24048bec6aff68????????64a100000000505381ec88000000a1????????33c58945ec5657508d45f464a3000000008bf18975a833c08945b88945a4384308":
__thiscall void Entity_NPC::UpdateDirtColor(bool unk);

struct Entity_NPC : public Entity {
{{
	inline ColorMod* GetDirtColor() { return (ColorMod*)((char*)this + 0xBFC); }
    inline uint32_t* GetDeliriumBossType() { return (uint32_t*)((char*)this + 0xB18); }
    inline uint32_t* GetDeliriumBossVariant() { return (uint32_t*)((char*)this + 0xB1C); }
    inline uint16_t* GetDeliriumTransformationTimer() { return (uint16_t*)((char*)this + 0xB20); }
    inline uint8_t* GetDeliriumRemainingAttacks() { return (uint8_t*)((char*)this + 0xB22); }
    inline uint8_t* GetDeliriumState() { return (uint8_t*)((char*)this + 0xB23); }
    inline uint32_t* GetDeliriumAttackID() { return (uint32_t*)((char*)this + 0xB28); }
    inline uint8_t* GetDeliriumAttackAngle() { return (uint8_t*)((char*)this + 0xB2C); }
    inline uint32_t* GetDeliriumCycleID() { return (uint32_t*)((char*)this + 0xB34); }
	inline int* GetControllerId() { return (int*)((char*)this + 0xE6C); }
	inline void SetControllerId(int x) { *(int*)((char*)this + 0xE6C) = x; }
}} };



"568bf18b861403000085c074306a0068(????????)68":
reference void* EntityNPCRTTI;
