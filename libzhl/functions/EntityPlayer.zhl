//AnimatePickup - Entity_Player::AnimatePickup(ANM2 const&, bool, char const*)
//(/* public: void __thiscall Player::AnimatePickup(struct ANM2 const &) */) --> rebirth zhl
/*
"558BEC83E4??81EC???????535657FF": //bless JSG
__thiscall void Entity_Player::AnimatePickup(Entity_Player *this, ANM2 *param_1,bool param_2,char *param_3);
*/


//AddCollectible - 
"558bec6aff68????????64a1????????5081ec88000000a1????????33c58945??5657508d45??64a3????????8bf1":
__thiscall void Entity_Player::AddCollectible(Entity_Player *this<ecx>, int type, int charge, bool firsttime,int slot,int vardata);

//AddBrokenHearts
"558bec83e4f8568bf15783be????????2875??8b86????????85c074??8bf083be????????2874??8bbe":
__thiscall void Entity_Player::AddBrokenHearts(Entity_Player *this, int amount);

//AddBombs
"558bec83e4f88b55??83ec0c568bf1":
__thiscall void Entity_Player::AddBombs(Entity_Player *this, int amount);

//AddKeys
"558bec83ec088b45??8d55??0381????????83f863":
__thiscall void Entity_Player::AddKeys(Entity_Player *this, int amount);

//AddJarHearts
"558bec83b9????????28":
__thiscall void Entity_Player::AddJarHearts(Entity_Player *this, int amount);

//AddJarFlies (func for lua?)
"558bec8b91????????b814000000":
__thiscall void Entity_Player::AddJarFlies(Entity_Player *this, int amount);

//AddPrettyFly (func for lua?)
"568bf18b86????????ff40":
__thiscall void Entity_Player::AddPrettyFly(Entity_Player *this);

//AddCoins
"558bec83ec085356578b7d??8bd985ff":
__thiscall void Entity_Player::AddCoins(Entity_Player *this, int amount);

"558bec83e4f883ec208b4d":
static cleanup __cdecl PosVel Entity_Player::GetMultiShotPositionVelocity(int loopIndex, WeaponType weaponType, Vector shotDirection, float shotSpeed, Weapon_MultiShotParams multiShotParams);

"558bec83e4f883ec148b45??53568bf133c9":
Weapon_MultiShotParams Entity_Player::GetMultiShotParams(Entity_Player *this<ecx>, WeaponType weaponType);

"558bec83e4f883ec0c53568bf18b0d":
__thiscall Entity_Player* Entity_Player::InitTwin(Entity_Player *this<ecx>, int playerType); //replace with ePlayerType later

"558bec6aff68????????64a1????????5081eca0010000a1????????33c58945??5657508d45??64a3????????8bf989bd????????f30f7e05":
virtual __thiscall void Entity_Player::Init(Entity_Player* this<ecx>, unsigned int type, unsigned int variant, unsigned int subtype, unsigned int initSeed);

"558bec6aff68????????64a1????????5081ec8c010000":
virtual __thiscall void Entity_Player::Update(Entity_Player* this<ecx>);

"558bec6aff68????????64a1????????5081ec3c010000a1":
virtual __thiscall bool Entity_Player::TakeDamage(Entity_Player *this<ecx>, float Damage, unsigned __int64 DamageFlags, EntityRef *Source, int DamageCountdown);

"558bec83e4f881ec4c01000053":
__thiscall Entity* Entity_Player::ThrowHeldEntity(Entity_Player *this<ecx>, Vector* Velocity);

"558bec6aff68????????64a1????????5081ecd0000000":
__thiscall void Entity_Player::InitPostLevelInitStats(Entity_Player *this<ecx>);

"558bec83e4f881ec3c010000":
__thiscall void Entity_Player::TriggerRoomExit(Entity_Player *this<ecx>, bool unk);

"558bec83e4f883ec7ca1????????33c4894424??538bd9":
__thiscall bool Entity_Player::TriggerDeath(Entity_Player *this<ecx>, bool checkOnly);

"558bec83e4f883ec08568bf15780be????????00":
__thiscall void Entity_Player::Revive(Entity_Player *this<ecx>);

"558bec568bf1e8????????8b45??8986":
__thiscall void Entity_Player::SetItemState(Entity_Player* this<ecx>, CollectibleType collectible);

"558bec6aff68????????64a1????????5081ec38040000":
__thiscall void Entity_Player::UseCard(Entity_Player* this<ecx>, int cardType, unsigned int useFlag);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505381ec78010000a1????????33c58945??5657508d45??64a3????????8bf989bd????????8b43":
__thiscall void Entity_Player::UsePill(Entity_Player* this<ecx>, int ePillEffect, int ePillColor, unsigned int useFlag);

"558bec83e4c081ecb4000000a1????????33c4898424????????538bd9568b75":
__thiscall void Entity_Player::Render(Entity_Player *this<ecx>, Vector *offset);

"8b81????????83c0fc83f824":
__thiscall int Entity_Player::GetHealthType(Entity_Player *this<ecx>);

"558bec83e4f85153568bf15780be????????00":
__thiscall void Entity_Player::RenderHead(Entity_Player* this<ecx>,Vector *position);

"558bec83e4f883ec1453568bf15780be????????00":
__thiscall void Entity_Player::RenderBody(Entity_Player *this<ecx>,Vector *position);

"558bec6aff68????????64a1????????5081ec88000000a1????????33c58945??5657508d45??64a3????????8bf9897d??688f000000":
__thiscall void Entity_Player::TriggerRoomClear(Entity_Player *this<ecx>);

"558bec83e4f883ec0c538b5d??56578bf985db":
__thiscall bool Entity_Player::CanUseCollectible(Entity_Player *this<ecx>, CollectibleType collectible, int slot);

"558bec83e4f883ec1c538b5d??56578bf98b0d":
__thiscall bool Entity_Player::HasCollectible(Entity_Player *this<ecx>, int type, bool ignoreModifiers);

"8b91f01500":
__thiscall int Entity_Player::GetCollectibleCount(Entity_Player *this<ecx>);

"558bec6aff68????????64a1????????5081ec70060000":
__thiscall void Entity_Player::EvaluateItems(Entity_Player *this<ecx>);

"558bec8b45080981b8":
__thiscall void Entity_Player::AddCacheFlags(Entity_Player *this<ecx>, int flags);

"558bec8b55088d04d5000000002bc28b8481c41400005dc20400":
__thiscall int Entity_Player::GetActiveItem(Entity_Player *this<ecx>, int slot);

"558bec8b55??5356578d04d5":
__thiscall int Entity_Player::GetTotalActiveCharge(Entity_Player *this<ecx>, int slot);

"558bec8b45??568b75??81fe1e010000":
__thiscall int Entity_Player::GetActiveMaxCharge(Entity_Player *this<ecx>, int collectible, int vardata); //replace int to CollectibleType for collectible later

"558bec518b55??83fa0374??83fa0275??81b9????????4402000075??a1????????83b8????????2c74??8d04d5????????2bc28d14":
__thiscall int Entity_Player::GetActiveMinUsableCharge(Entity_Player *this<ecx>, int slot);

"558bec8b45??8d14c5????????2bd08b45":
__thiscall void Entity_Player::SetActiveVarData(Entity_Player *this<ecx>, int vardata, int slot);

"558bec83e4f883ec1c538b5d??56578bf985db":
__thiscall int Entity_Player::AddActiveCharge(Entity_Player *this<ecx>, unsigned int charge, int slot, bool unk, bool overcharge, bool force);

"558bec83e4f883ec14538b5d??b841020000":
__thiscall int Entity_Player::DropCollectible(Entity_Player *this<ecx>, int collectible, int param2, bool param3);

"558bec83e4f8515356578bf98b472c85c075??8b9f0c130000":
__thiscall int Entity_Player::GetHealthLimit(Entity_Player *this<ecx>, bool keeper);

"558bec83e4f883ec14538b5d0856578bf980bf1c1f000000":
__thiscall void Entity_Player::IncrementPlayerFormCounter(Entity_Player *this<ecx>, int ePlayerForm, int num);

"558bec83ec3ca1????????33c58945fc5356":
__thiscall void Entity_Player::TriggerNewRoom_TemporaryEffects(Entity_Player *this<ecx>);

"558bec6aff68????????64a1000000005081ecb8000000535657a1????????":
__thiscall void Entity_Player::TriggerNewStage(Entity_Player *this<ecx>, bool unk);

"558bec83e4f851568bf18b86????????0386":
__thiscall bool Entity_Player::TryPreventDeath(Entity_Player *this<ecx>);

"558bec578bf98b4d":
__thiscall void Entity_Player::RemoveCollectibleByHistoryIndex(Entity_Player *this<ecx>, int index);

"558bec6aff68????????64a1????????5081ec4c010000":
__thiscall void Entity_Player::Teleport(Entity_Player *this<ecx>,Vector *position, bool doEffects, bool teleportTwinPlayers);

"558bec83e4f881ec1c01000053":
__thiscall bool Entity_Player::TryFakeDeath(Entity_Player *this<ecx>);

"558bec83e4f883ec145356578bf9837f??01":
__thiscall int Entity_Player::GetCollectibleNum(Entity_Player *this<ecx>, int collectibleID, bool OnlyCountTrueItems);

"558bec83e4f883ec1c5356578b7d??8bd981ff2e010000":
__thiscall void Entity_Player::TriggerCollectibleRemoved(Entity_Player *this<ecx>, unsigned int collectibleID);

"558bec83e4f8515356578bf9837f??00":
__thiscall void Entity_Player::TriggerTrinketAdded(Entity_Player *this<ecx>, unsigned int trinketID, bool firstTimePickingUp);

"558bec83e4f85153568bf157837e??00":
__thiscall void Entity_Player::TriggerTrinketRemoved(Entity_Player *this<ecx>, unsigned int trinketID);

"558bec83e4f85153565733f6":
__thiscall int Entity_Player::GetWeaponModifiers(Entity_Player *this<ecx>);

"558bec8b45??8a55":
__thiscall void Entity_Player::EnableWeaponType(Entity_Player *this<ecx>, WeaponType weaponType, bool Set);


struct Entity_Player depends (ActiveItemDesc, History, Weapon) {{
	inline int GetPlayerType() { return *(int*)((char*)this + 0x130c); }
	inline Weapon* GetWeapon() { return (Weapon*)((char*)this + 0x1328); }
	inline Entity** GetHeldEntity() { return (Entity**)((char*)this + 0x1358); }
	inline int* GetFireDelayModifier() { return (int*)((char*)this + 0x146c); }
	inline int* GetDamageModifier() { return (int*)((char*)this + 0x1470); }
	inline int GetDeadEyeCharge() { return *(int*)((char*)this + 0x17D0); }
	inline bool* GetCanShoot() { return (bool*)((char*)this + 0x1745); }
	inline int* GetMegaBlastDuration() { return (int*)((char*)this + 0x1814); }
	inline History* GetHistory() { return (History*)((char*)this + 0x1D0C); }
	inline ActiveItemDesc* GetActiveItemDesc(int index) { return (ActiveItemDesc*)((char*)this + index * 28 + 0x14c4); }
	inline int* GetRedStewBonusDuration() { return (int*)((char*)this + 0x1d8c); }
    inline BagOfCraftingPickup* GetBagOfCraftingContent() { return (BagOfCraftingPickup*)((char*)this + 0x1e44); }
	inline int* GetBagOfCraftingOutput() { return (int*)((char*)this + 0x1e4c); }
}};
