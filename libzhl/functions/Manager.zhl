"558bec83e4f883ec1856578b3d":
static void Manager::Update();

"558bec83ec105356578b3d????????85ff":
static __stdcall void Manager::RecordPlayerCompletion(int eCompletionEvent);

"558bec81ec38040000":
__thiscall void Manager::LoadGameState(int saveslot);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505383ec58a1????????33c58945??5657508d45??64a3????????8bf9897d??f30f7e05":
__thiscall void Manager::LoadConfigs();

"558bec6aff68????????64a1????????5051b820020100":
__thiscall void Manager::LoadChallenges(char *xmlpath,char ismod);


"68(????????)ffd683f8ff74??24113c1074??6800040000e8????????68????????68????????8bf0680004000056e8????????83c4146a0068????????56ff15????????50ff15????????56e8????????8b35???????":
reference std_string g_SaveDataPath;

/*
"":
__stdcall static void __stdcall Manager::RestartGame(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) //from remix 2 zhl
__cdecl void Manager::RestartGame(Seeds param_1,bool param_2,bool param_3) //switch ver
__stdcall void Manager::RestartGame() //v1.7.9b maybe
*/

"558bec694508a4":
__thiscall ChallengeParam* Manager::GetChallengeParams(int challengeID);

"558BEC6AFF68????????64a1000000005083EC60A1????????33C58945F05650":
__thiscall void Manager::StartNewGame(int playerType, int challenge,  UnknownGameStartStruct unk, int difficulty);

"558bec51568b35????????8b86":
__thiscall bool Manager::AchievementUnlocksDisallowed(bool unk);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505381ecd0000000a1????????33c58945??5657508d45??64a3????????8bf989bd":
__thiscall void Manager::ExecuteStartGame();

"558bec6aff68????????64a1????????5083ec68a1????????33c58945??535657508d45??64a3????????c745??00000000":
static void Manager::RestartGame();

"568bf18b46??83e801":
__thiscall void Manager::cleanup_current_state();
 
"558bec6aff68????????64a1000000005083ec3ca1????????33c58945f0535657508d45f464a3000000008b550c8bca":
static ReferenceCounter_ImageBase* Manager::LoadImage(ReferenceCounter_ImageBase* result, const char* path, KAGE_Graphics_ImageBase_VertexAttributeDescriptor* descriptor, bool unk);

struct Manager depends (StringTable, PersistentGameData, NightmareScene, UnknownGameStartStruct, ModManager, ReferenceCounter_ImageBase, Cutscene) { {{
	inline int GetState() { return *(int*)((char*)this + 0x8); }
	inline int* GetTestState() { return (int*)((char*)this + 0x8); }
	inline PersistentGameData* GetPersistentGameData() { return (PersistentGameData*)((char*)this + 0x14); }
	inline NightmareScene* GetNightmareScene() { return (NightmareScene*)((char*)this + 0x211BC); }
	inline bool GetDebugConsoleEnabled() { return *(bool*)((char*)this + 0x29E4C); }
	inline int GetMaxRenderScale() { return *(int*)((char*)this + 0x29E58); }
	inline ModManager* GetModManager() { return (ModManager*)((char*)this + 0x29FD8); }
	inline DailyChallenge* GetDailyChallenge() { return (DailyChallenge*)((char*)this + 0x1ea750); } 
	inline StringTable* GetStringTable() { return (StringTable*)((char*)this + 0x4a234); }
	inline bool GetNetStart() { return *(bool*)((char*)this + 0x1ea804); }
	inline Cutscene* GetCutscene() { return (Cutscene*)((char*)this + 0x20A00); }
}} 
    char unk1[0x13];
    PersistentGameData _persistentGameData;
    StringTable _stringTable;
};

"e8????????83c414898544feffff8bc8c745fc05000000e8????????c745fcffffffffa3(????????)e8????????e8????????":
reference Manager *g_Manager;
