
"558bec83ec24a1????????33c58945??a1": 
__thiscall void Menu_Character::Update();

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505381eca8000000a1????????33c58945??5657508d45??64a3????????8bf989bd????????80bf????????00":
__thiscall void Menu_Character::Render();

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505383ec48a1????????33c58945??5657508d45??64a3????????8bf1":
__thiscall void Menu_Character::Init(Vector* unk);

//"558bec6aff68????????64a1????????5083ec2ca1????????33c58945??535657508d45??64a3????????8bd9":
//__thiscall void Menu_Character::ProcessInput();

"558bec83ec2ca1????????33c58945??5356578bf9":
__thiscall void Menu_Character::SelectRandomChar();

struct Menu_Character depends (ANM2, CompletionWidget) {
{{
	inline CompletionWidget* GetCompletionWidget() { return (CompletionWidget*)((char*)this + 1168); } 
	inline ANM2* GetBigCharPageSprite() { return (ANM2*)((char*)this + 0x40) ; }
	inline ANM2* GetDifficultyOverlaySprite() { return (ANM2*)((char*)this + 0x154) ; }
	inline ANM2* GetGreedDecoSprite() { return (ANM2*)((char*)this + 0x268) ; }
	inline ANM2* GetBGSprite() { return (ANM2*)((char*)this + 0x37c) ; }
	inline ANM2* GetDifficultyPageSprite() { return (ANM2*)((char*)this + 0x5ac) ; }
	inline ANM2* GetSeedPageSprite() { return (ANM2*)((char*)this + 0x6c0) ; }
	inline ANM2* GetWinStreakPageSprite() { return (ANM2*)((char*)this + 0x7d4) ; }
	inline ANM2* GetEastereggPageSprite() { return (ANM2*)((char*)this + 0x8e8) ; }
	inline ANM2* GetSeedUnlockPageSprite() { return (ANM2*)((char*)this + 0x9fc) ; }
	inline ANM2* GetCharacterPortraitSprite() { return (ANM2*)((char*)this + 0xb18) ; }
	inline ANM2* GetSeedEntrySprite() { return (ANM2*)((char*)this + 0xc48) ; }
	inline ANM2* GetPageSwapWidgetSprite() { return (ANM2*)((char*)this + 0xdb0) ; }
	inline ANM2* GetTaintedBGDecoSprite() { return (ANM2*)((char*)this + 0xec4) ; }

	inline int GetNumCharacters() { return *(int*)((char*)this + 0xB10); }
	inline int GetSelectedCharacterMenu() { return *(int*)((char*)this + 0xDAC); }
	inline void SetSelectedCharacterMenu(int id) { *(int *)((char*)this + 0xDAC) = id; }
}} 
    int Status : 0x0; //1 seeds screen //4 transitioning to tainted
    bool IsCharacterUnlocked : 0x5;
    bool IsInputPossible : 0x6;
    int Difficulty : 0x8;
    int CooldownWhenHoldDirection : 0xC;
    int SelectedCharacterID : 0x10;
    int _chosenRandomCharacter : 0x14;
    float _randomRotationVelocity : 0x18;
    int _randomRotationAmount : 0x20;
    float MenuBlackColorizeIntensity : 0x30;
    float MenuYellowColorizeIntensity : 0x34;
    float _PositionX : 0x38;
    float _PositionY : 0x3c;
    ANM2 _BigCharPageSprite : 0x40;
    ANM2 _DifficultyOverlaySprite : 0x154;
    ANM2 _GreedDecoOverlaySprite : 0x268;
    ANM2 _CharacterMenuBGSprite : 0x37c;
    CompletionWidget _completionWidget : 0x490;
    ANM2 _DifficultyPageSprite : 0x5ac;
    ANM2 _SeedPageSprite : 0x6c0;
    ANM2 _WinStreakPageSprite : 0x7d4;
    ANM2 _EastereggPageSprite : 0x8e8;
    ANM2 _SeedUnlockPageSprite : 0x9fc;
    int _numCharacters : 0xb10;
    int _numCharacters_MINUS_SelectedEntry : 0xb14;
    ANM2 _CharacterPortraitsSprite : 0xb18;
    ANM2 _SeedEntrySprite : 0xc48;
    int _characterMenuShown : 0xdac; /* 0 Normal 1 Tained */
    ANM2 _PageSwapWidgetSprite : 0xdb0;
    ANM2 _TaintedMenuBGDecoSprite : 0xec4;
    int _somethingCustomCharSelection : 0xfe0;
} : 0xfec;
