"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505383ec105657a1????????33c5508d45??64a3????????8bf9897d":
__thiscall void Game::constructor(Game *this<eax>);


/*
FuncSignature Signature_GameIsPaused = {
	"\x83\xB9\x00\x00\x00\x00\x00\x8B\x15",
	//mask
	"xx?????xx",
*/

"83b9????????008b15":
bool Game::IsPaused(Game *this<eax>);

"a1????????8b80????????83f80174??83f80374??32c0":
bool Game::IsHardMode(Game *this<eax>);

"558bec83e4f883ec6c8b45":
__thiscall Entity* Game::Spawn(Game *this<ecx>, unsigned int type, unsigned int variant, const Vector& position, const Vector& velocity, Entity* spawner, unsigned int subtype, unsigned int seed, unsigned int unk);


"558beca1????????538b5d":
__thiscall void Game::ShakeScreen(Game *this<ecx>, int timeout);

"558bec83ec088b45??56":
__thiscall void Game::MakeShockwave(Game *this<ecx>, const Vector& pos, float amplitude, float speed, int duration);

"558bec5156578bf98b97":
__thiscall Entity_Player* Game::GetPlayer(IsaacRepentance::Game *this<ecx>, unsigned int Index);

"558bec83e4f083ec38a1":
void Game::Update(Game* this<ecx>);

"568bf180be????????008d8e":
__thiscall bool Game::AchievementUnlocksDisallowed(Game *this<ecx>);

"558bec83ec1c53568b75??578bf9":
__thiscall bool Game::PlaceRoom(Game *this<ecx>, LevelGenerator_Room *room, RoomConfig *data, unsigned int Seed, int dimension);

"558bec83e4f8515356578bf96aff":
__thiscall void Game::UpdateVisibility(Game *this<ecx>);

"558bec8b45??85c079":
__thiscall uint32_t* Game::GetRoomDescriptorsOffsetsArrayForDimension(Game *this<ecx>, uint32_t dimension);

"558bec6aff68????????64a1????????505657a1????????33c5508d45??64a3????????8bf164a1":
__thiscall RoomDescriptor* Game::GetRoomByIdx(Game *this<ecx>, uint32_t idx, int32_t dimension);

"558bec83ec1cf30f1005":
__thiscall float Game::GetPlanetariumChance(Game *this<ecx>);

"558bec83ec0c568bf18b0d":
__thiscall void Game::StartStageTransition(bool SameStage,int param_2,Entity_Player *param_3);

"558bec83e4f881ec1802":
__thiscall void Game::Render(Game *this<ecx>);

//out potential target
/*
		01444061 e8  3a  1a       CALL       IsaacRepentance::Game::Game?                     int * Game?(Game * param_1)
				 e1  ff
		01444066 c7  45  fc       MOV        dword ptr [EBP  + local_14 ],0xffffffff
				 ff  ff  ff  ff
		0144406d a3  5c  d6       MOV        [g_Game? ],EAX                                   = ??
				 78  01
		01444072 e8  19  4c       CALL       IsaacRepentance::Game::Init?                     void Init?(void)
				 e1  ff


Signature base : \xE8\x00\x00\x00\x00
				 \xC7\x45\xFC\xFF\xFF\xFF\xFF
				 \xA3\x00\x00\x00\x00
				 \xE8\x00\x00\x00\x00\x8B x????xxxxxxxx????x????x

const static unsigned char Signature_GameGlobalAddresSig[] = {
	0xE8,0x00,0x00,0x00,0x00,
	0xC7,0x45,0xFC,0xFF,0xFF,0xFF,0xFF,
	0xA3,0x00,0x00,0x00,0x00,
	0xE8
};

const static FuncSignatureByte Signature_GameGlobalAddres = {
	Signature_GameGlobalAddresSig,
	"b????bbbbbbbbvvvvb"
};
*/

".e8????????c745fcffffffffa3(????????)e8":
reference Game *g_Game;

struct Game depends (DailyChallenge)
{{
	Game()
	{
		this->constructor();
	}
    
    uint32_t GetNbRooms() const 
    { 
        return *(uint32_t*)((char*)this + 0x1815C); 
    }
    
	inline Console* GetConsole() { return (Console*)((char*)this + 0x1BB60); } // Cast to appropriate type
	
	inline ItemOverlay* GetItemOverlay() { return (ItemOverlay*)((char*)this + 0x1BCC0) ; }
	
	inline Ambush* GetAmbush() { return (Ambush*)((char*)this + 0x1c31b8); }
	
	inline Room** GetCurrentRoom() { return (Room**)((char*)this + 0x18190); }
	
	inline int GetGreedModeWave() { return *(int*)((char*)this + 0x181C4); }
	
	inline const unsigned int* GetLevelStateFlags() { return (const unsigned int*)((char*)this + 0x1822C); }
		
	inline PlayerManager* GetPlayerManager() { return (PlayerManager*)((char*)this + 0x1BA40); }
	
	inline int GetLastDevilRoomStage() { return *(int*)((char*)this + 0x1C3174); }
	
	inline int GetLastLevelWithDamage() { return *(int*)((char*)this + 0x243628); }
	
	inline int GetLastLevelWithoutHalfHp() { return *(int*)((char*)this + 0x24361c); }

	inline int GetTreasureRoomsVisited() { return *(int*)((char*)this + 0x1C3178); }
	
	inline int GetPlanetariumsVisited() { return *(int*)((char*)this + 0x1C317C); }
	
	inline DailyChallenge GetDailyChallenge() { return *(DailyChallenge*)((char*)this + 0x1C3204); }
	
	inline unsigned int GetChallenge() { return *(unsigned int*)((char*)this + 0x1C319C); }
	
	inline int GetCurrentRoomIdx() {return *(int*)((char*)this + 0x18194); }
	
	inline int GetLastBossRoomListIdx() {return *(int*)((char*)this + 0x181A4); }
	
	inline int GetDifficulty() {return *(int*)((char*) this + 0x243624); }
	
    RoomDescriptor* GetRoomDescriptorsForDimension(uint32_t dimension) 
    { 
        return (RoomDescriptor*)((char*)this + 0x14 + dimension * sizeof(RoomDescriptor) * 169); 
    }
}};
